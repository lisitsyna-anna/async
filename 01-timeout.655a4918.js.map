{"mappings":"YAsBA,IAIcA,EAAUC,YAJT,SAAAC,GACbC,QAAQC,IAAI,aAA0BC,OAALH,EAAK,sC,GAGG,IAAM,KAEzCC,QAAQC,IAAIJ,GAEZ,IAAMM,EAAoBC,KAAKC,SAAW,GAC1CL,QAAQC,IAAIE,GAERA,GACFG,aAAaT,E","sources":["src/js/01-timeout.js"],"sourcesContent":["import '../css/common.css';\n\n/*\n * Метод window.setTimeout(callback, delay, args)\n */\n\n// console.log('До вызова setTimeout');\n\n// setTimeout(() => {\n//   console.log('1 - Внутри callback для setTimeout');\n// }, 2000);\n\n// setTimeout(() => {\n//   console.log('2 - Внутри callback для setTimeout');\n// }, 1000);\n\n// console.log('После вызова setTimeout');\n\n/*\n * Очистка таймаута с clearTimeout(timeoutId)\n */\n\nconst logger = time => {\n  console.log(`Лог через ${time}ms, потому что не отменили таймаут`);\n};\n\nconst timerId = setTimeout(logger, 2000, 2000);\n\nconsole.log(timerId);\n\nconst shouldCancelTimer = Math.random() > 0.3;\nconsole.log(shouldCancelTimer);\n\nif (shouldCancelTimer) {\n  clearTimeout(timerId);\n}\n"],"names":["$6cda7cae63cad14f$var$timerId","setTimeout","time","console","log","concat","$6cda7cae63cad14f$var$shouldCancelTimer","Math","random","clearTimeout"],"version":3,"file":"01-timeout.655a4918.js.map"}